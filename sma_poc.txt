from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

# ‚úÖ Setup driver
edge_driver_path = "C:/path/to/msedgedriver.exe"  # üîÅ Replace with your path
options = webdriver.EdgeOptions()
options.add_argument("--start-maximized")
driver = webdriver.Edge(executable_path=edge_driver_path, options=options)
wait = WebDriverWait(driver, 30)

# ‚úÖ Open Home Page
driver.get("https://your-portal-url.com")  # üîÅ Replace with actual portal URL

# ‚úÖ Wait for processes table to load
wait.until(EC.presence_of_element_located((By.CLASS_NAME, "ag-center-cols-container")))

# ‚úÖ Get all process rows (first screen)
process_rows = driver.find_elements(By.CSS_SELECTOR, ".ag-center-cols-container .ag-row")

print(f"Total processes found: {len(process_rows)}")

for index in range(len(process_rows)):
    # Refetch rows again as DOM may refresh on each navigation
    process_rows = driver.find_elements(By.CSS_SELECTOR, ".ag-center-cols-container .ag-row")

    try:
        # ‚úÖ Click the process row to navigate to 2nd screen
        process_rows[index].click()
        print(f"\n‚û°Ô∏è Opened process {index + 1}")

        # ‚úÖ Wait for second screen to load (add proper identifier)
        wait.until(EC.presence_of_element_located((By.XPATH, "//button[contains(text(), 'Action')]")))  # adjust if needed

        # ‚úÖ Wait for third screen grid to load
        wait.until(EC.presence_of_element_located((By.CLASS_NAME, "ag-center-cols-container")))
        time.sleep(2)

        # ‚úÖ Loop through third screen rows
        rows = driver.find_elements(By.CSS_SELECTOR, ".ag-center-cols-container .ag-row")

        for row in rows:
            try:
                unmatched = row.find_element(By.XPATH, ".//div[@col-id='unmatched']").text
                partial = row.find_element(By.XPATH, ".//div[@col-id='partiallyMatched']").text

                unmatched_count = int(unmatched.strip()) if unmatched.strip().isdigit() else 0
                partial_count = int(partial.strip()) if partial.strip().isdigit() else 0

                if unmatched_count > 0 or partial_count > 0:
                    print(f"‚úÖ Unmatched: {unmatched_count}, Partial: {partial_count} ‚ûú Downloading...")

                    # ‚úÖ Click dropdown
                    dropdown_button = wait.until(EC.element_to_be_clickable(
                        (By.XPATH, "//button[contains(@aria-label, 'Export')]")
                    ))
                    dropdown_button.click()

                    # ‚úÖ Click 'Export Breaks Only'
                    export_option = wait.until(EC.element_to_be_clickable(
                        (By.XPATH, "//li[contains(text(), 'Export Breaks Only')]")
                    ))
                    export_option.click()

                    print("‚úÖ Download started.")
                    time.sleep(3)
                    break  # stop checking other rows

            except Exception as e:
                print("‚ö†Ô∏è Error parsing row:", e)
                continue

        # ‚úÖ Navigate back to Home (1st screen)
        driver.back()  # Use back() or navigate to homepage link directly
        wait.until(EC.presence_of_element_located((By.CLASS_NAME, "ag-center-cols-container")))
        time.sleep(2)

    except Exception as e:
        print(f"‚ùå Error on process {index + 1}: {e}")
        driver.back()  # attempt to return in case of failure
        time.sleep(2)

print("\n‚úÖ All processes checked.")
driver.quit()