/<amount>[[:space:]]*-?[0-9]+(\.[0-9]+)?[[:space:]]*<\/amount>/d
s/<amount>([0-9]+)\.0+<\/amount>/<amount>\1<\/amount>/g
s/<financialIndicatorValue>([0-9]+)\.0+<\/financialIndicatorValue>/<financialIndicatorValue>\1<\/financialIndicatorValue>/g
s/<code><\/code>//g
s/<\/code>//g
s/<id><\/id>//g
s/<\/id>//g
s/<productName><\/productName>//g
s/<\/productName>//g
s/<idScheme><\/idScheme>//g
s/<\/idScheme>//g
s/(<codingScheme>.*?)[^a-zA-Z0-9 ]+(<\/codingScheme>)/\1\2/g
s/&#13;//g
s/(>[^<]*?)[^a-zA-Z0-9 ]+(<)/\1\
/<idScheme>/ {N; s#<idScheme>[^<]*\n[^<]*</idScheme>##g}
s#(<amount>)([0-9]+)\.([0-9]*[1-9])0+</amount>#\1\2.\3</amount>#g
/<idScheme>/ {N; N; s#<idScheme>[^<]*\n[^<]*\n[^<]*</idScheme>##g}
s#<id\s*/>##g
/^$/d
/<idScheme>/ {N; N; N; N; s#<idScheme>[^<]*\n([^<]*\n){0,3}[^<]*</idScheme>##g}
/<amount>-?[0-9]\+\(\.[0-9]*\)\?<\/amount>/d
/<idScheme>/ {N; N; N; N; s#<idScheme>[^<]*\n([^<]*\n){0,3}[^<]*</idScheme>##g}

# Function to filter known differences, remove empty lines and format numbers
filter_known_differences() {
    sed '/^[[:space:]]*$/d' | sed -f "$IGNORE_PATTERNS_FILE"
}


echo "$diff_output" | awk '
    {
        if ($0 ~ /^\+/) line = ">>> " substr($0,2);
        else if ($0 ~ /^-/) line = "<<< " substr($0,2);
        else next;

        # Trim leading and trailing spaces
        gsub(/^[ \t]+|[ \t]+$/, "", line);

        # Print only if line is not empty
        if (length(line) > 4) print line;
    } 
    END { print "==== Difference Separator ====" }
' >> "$DIFF_FILE"


echo "$diff_output" | awk '
    BEGIN { has_diff = 0 }
    {
        if ($0 ~ /^\+/) line = ">>> " substr($0,2);
        else if ($0 ~ /^-/) line = "<<< " substr($0,2);
        else next;

        # Trim leading and trailing spaces
        gsub(/^[ \t]+|[ \t]+$/, "", line);

        # Print only if line is not empty
        if (length(line) > 4) {
            print line;
            has_diff = 1;
        }
    } 
    END {
        if (has_diff) print "==== Difference Separator ====";
    }
' >> "$DIFF_FILE"
    